#name: NDaysChallenge-Deploy
#
#on:
#  push:
#    branches:
#      - main
#  workflow_dispatch:
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: make application.yml
#        if: contains(github.ref, 'main')
#        run: |
#          cd ./src/main/resources
#          touch ./application.yml
#          echo "${{ secrets.APPLICATION }}" > ./application.yml
#        shell: bash
#
#      - name: make application-prod.yml
#        if: contains(github.ref, 'main')
#        run: |
#          cd ./src/main/resources
#          touch ./application-prod.yml
#          echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.yml
#        shell: bash
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x ./gradlew
#        shell: bash
#
#      - name: Build with Gradle
#        run: ./gradlew clean -x test build
#        shell: bash
#
#      - name: Get current date
#        id: version
#        run: |
#          echo "builddate=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_OUTPUT
#
#      - name: Generate deployment package
#        run: |
#          mkdir -p deploy
#          cp build/libs/*.jar deploy/application.jar
#          cp Procfile deploy/Procfile
#          cp -r .ebextensions deploy/.ebextensions
#          cp -r .platform deploy/.platform
#          cd deploy && zip -r deploy.zip .
#
#      - name: Deploy to EB
#        uses: einaregilsson/beanstalk-deploy@v21
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          application_name: NDaysChallenge-backend-dev
#          environment_name: PROD-NDC-API-SERVICE
#          version_label: github-action-${{ steps.version.outputs.builddate }}
#          region: us-west-2
#          deployment_package: deploy/deploy.zip
#          wait_for_environment_recovery: 300
