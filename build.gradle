plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'challenge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.google.code.findbugs:jsr305:3.0.2' //nullable

	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA' //entityManagerFactory 빈 생성 지원//

	implementation      'org.projectlombok:lombok'
	testImplementation  'org.projectlombok:lombok'
	annotationProcessor     'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'mysql:mysql-connector-java'

	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//보안
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security' //스프링 시큐리티
	testImplementation 'org.springframework.security:spring-security-test'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	//WebClient 사용 - http client
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.projectreactor:reactor-spring:1.0.1.RELEASE'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

}

tasks.named('test') {
	useJUnitPlatform()
}

task('release') {
	/* ./gradlew build를 먼저 실행하라는 뜻이다. */
	dependsOn("build")

	doLast {
		def stdout = new ByteArrayOutputStream()
		/* exec - 커맨드 라인 프로세서; 파워셸/터미널에서 실행하는 것과 같다. */
		exec {
			/* $eb setenv SPRING_PROFILES_ACTIVE=prod */
			commandLine 'eb', 'setenv', 'SPRING_PROFILES_ACTIVE=prod'
			standardOutput = stdout
		}
		/* 결과 로깅을 위한 작업 */
		println "eb setenv SPRING_PROFILES_ACTIVE=prod :\n$stdout";
		exec {
			/* $eb deploy */
			commandLine 'eb', 'deploy'
			standardOutput = stdout
		}
		println "eb deploy :\n$stdout";
		println "Release succeeded."
	}

}